@model ETHistoric

@using TCC.Domain.Entities
@using TCC.BusinessLayer.BusinessLayers

@{
    var urlSave = "Learnboard/BDD/SaveHistoric";
    var page = "Page_1";
}

@Scripts.Render("~/Scripts/Postit")

<style>
    .clickable {
        color: #333;
        cursor: pointer;
        opacity: 0.7
    }

        .clickable:hover {
            opacity: 1
        }
</style>

<script type="text/javascript">
    var aditionalE =
    {
        'Id': 'no-value',
        'Html': '<span>E: </span>',
        'HtmlChoice': '<p class="clickable">E: <input type="hidden" id="IdChoice" value="no-value"></p>',
    }

    var sequence =
    [
        {
            'Html': '<span>Cenário: </span>',
            'Here': false
        },
        {
            'Id': 1,
            'Html': '<span>Dado: </span>',
            'HtmlChoice': '<p class="clickable">Dado: <input type="hidden" id="IdChoice" value="1"></p>',
            'Here': false
        },
        {
            'Id': 2,
            'Html': '<span>Quando: </span>',
            'HtmlChoice': '<p class="clickable">Quando: <input type="hidden" id="IdChoice" value="2"></p>',
            'Here': false
        },
        {
            'Id': 3,
            'Html': '<span>Então: </span>',
            'HtmlChoice': '<p class="clickable">Então: <input type="hidden" id="IdChoice" value="3"></p>',
            'Here': false
        },
        aditionalE
    ]

    function start() {
        $('#Example').remove();
        $('#Append').append(ePlusPostit);
    }

    function writeLine() {
        var input = $('#Text');
        var text = input.val();
        input.val('');

        if (text != '') {
            addLine(text)
        }

        input.focus();
    }


    function addLine(text) {
        $('.remove-line').remove();
        var span = $('<span></span>').text(text);
        $('.lines:last p:last').append(span).append(eRemoveLinePostit);

        count();
        choices();
    }

    function addTitle(html) {
        var p = $('<p></p>').append(html);

        $('.lines:last').append(p);
    }

    function addChoice(html) {
        var p = $('<p class="choice"></p>').text('Escolha entre:')

        $('.lines:last').append(p).append(html);;
    }

    function addLineWithoutRemove(text) {
        $('.lines:last').append($('<p></p>').text(text));

        count();
    }

    function sendToSave(event) {
        var result = validationsByJs();

        if (result == true) {

            var data = {
                'model': {
                    'Id': '@Model.Id',
                    'IdProject': '@Model.IdProject',
                    'CardActors': []
                },
                'page': '@page'
            };

            $('.postit', '#Append').each(function () {
                var cardLine = [];

                $(this).find('p').each(function () {
                    cardLine.push({ 'Line': $(this).text() });
                });

                data.model.CardActors.push({ 'IdHistoric': '@Model.Id', 'CardLines': cardLine });
            });

            $.ajax({
                contentType: 'application/json; charset=utf-8',
                type: 'POST',
                url: '@urlSave',
                data: JSON.stringify(data),
                success: function (data) {
                    changeContent(data);
                }
            });
        }
        else
            $('.board-message')
                .text(result)
                .fadeIn();
    }

    function count() {
        countLines = $('.postit:last p').length;
    }

    function finishCard() {
        var lastPostit = $('.postit:last');

        if (!lastPostit.hasClass('alert-dismissible')) {
            lastPostit.addClass('alert-dismissible').prepend(eRemovePostit);
            lastPostit.removeClass('postit-send');
            appendIdCardActor(lastPostit);
        }

        $('#Append').append(ePlusPostit);
        $('.postit:last .input-group').remove();
        $('.remove-line').remove();
    }

    function appendPostit(element) {
        var result = validationsToAppendPostit();

        if (result == true) {
            element.parent().remove();
            $('#Append').append(ePostit);

            choices();

            $('#Text').focus();
        }
        else
            writeMessage(result);
    }

    function validationsToAppendPostit() {
        var countActive = $('.postit.active').length;

        if (countActive == 0)
            return 'Selecione um User Story para adicionar um cartão!';

        return true;
    }

    function removePostit(element) {
        element.closest('.to-remove').remove();
    }

    function removeLine(element) {
        var parent = element.parent('p');
        parent.nextAll('p').remove()
        parent.remove();

        changeFlag(sequence.find(i => i.Here == true).Id - 1);

        count();
        $('.postit:last p:last').append(eRemoveLinePostit);
        choices();
    }

    $('#UserStories').on('click', '.postit.select', function () {
        hideMessage();

        //actorSelected = {
        //    'Id': $(this).children('#Id').val(),
        //    'Text': $(this).children('p').text()
        //}

        $('#Actors .postit.select').removeClass('active');
        $(this).addClass('active');
    });

    function hideWriter() {
        $('.postit .input-group').hide();
    }

    function showWriter() {
        $('.postit .input-group').show();
    }

    $('#Append').on('click', '.clickable', function () {
        var value = $(this).children("#IdChoice").val();
        $('.clickable, .choice').remove();

        var element = sequence.find(i => i.Id == value);
        changeFlag(value);
        addTitle(element.Html);
        showWriter();
    });

    function changeFlag(value) {
        var convert = parseInt(value);

        if (Number.isInteger(convert)) {
            sequence.forEach(i => {
                if (i.Id == value)
                    i.Here = true;
                else
                    i.Here = false;
            });
        }
    }

    function choices() {
        if (countLines == 0) {
            showWriter();
            sequence[0].Here = true;
            addTitle(sequence[0].Html);
            return;
        }

        for (var i = 0; i < sequence.length; i++) {
            if (sequence[i].Here == true) {
                if (sequence[i + 1] == aditionalE) {
                    addChoice(aditionalE);
                }
                else {
                    addChoice(sequence[i + 1].HtmlChoice + aditionalE.HtmlChoice);
                }

                hideWriter();
                break;
            }
        }
    }
</script>