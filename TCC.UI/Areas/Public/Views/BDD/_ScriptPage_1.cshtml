@model ETHistoric

@using TCC.Domain.Entities
@using TCC.BusinessLayer.BusinessLayers

@{
    var urlSave = "Learnboard/BDD/SaveHistoric";
    var page = "Page_1";
}

@Scripts.Render("~/Scripts/Postit")

<style>
    .clickable {
        color: #333;
        cursor: pointer;
        opacity: 0.7
    }

    .clickable:hover {
        opacity: 1
    }
    
    .choice {
        margin-top: 30px;
    }

    .finish-card {
        position: absolute;
        right: 30px;
        bottom: 30px;
        font-size: 18px;
    }
</style>

<script type="text/javascript">
    var idFlagged;
    var eChoice = $('#ChooseChoice').html();
    var finalLine = $('#FinalLine').html();
    var additionalE =
    {
        'Id': 'none',
        'Text': '<span>E: </span>',
        'Html': $('#AdditionalE').html(),
    }

    var sequence =
    [
        {
            'Id': 0,
            'Text': 'Cenário: ',
            'Flag': false
        },
        {
            'Id': 1,
            'Text': 'Dado: ',
            'Html': $('#GivenLine').html(),
            'Flag': false
        },
        {
            'Id': 2,
            'Text': 'Quando: ',
            'Html': $('#WhenLine').html(),
            'Flag': false
        },
        {
            'Id': 3,
            'Text': 'Então: ',
            'Html': $('#ThenLine').html(),
            'Flag': false
        },
        {
            'Id': 4,
            'Text': 'Mas: ',
            'Html': $('#AdditionalBut').html(),
            'Flag': false
        },
        additionalE
    ]

    function start() {
        $('#Append').append(ePlusPostit);
    }

    function writeLine() {
        var input = $('#Text');
        var text = input.val();
        input.val('');

        if (text != '') {
            addLine(text)
        }
    }

    function addLine(text) {
        $('.remove-line').remove();
        $('.lines:last p:last').append(text).append(eRemoveLinePostit);

        count();
        choices();
    }

    function addTitle(text) {
        var p = $('<p></p>').append(text);

        $('.lines:last').append(p);
    }

    function addChoice(html) {
        $('.lines:last').append(eChoice).append(html);;
    }

    function sendToSave(event) {
        var result = validationsByJs();

        if (result == true) {

            var data = {
                'model': {
                    'Id': '@Model.Id',
                    'IdProject': '@Model.IdProject',
                    'CardBDDs': []
                },
                'page': '@page'
            };

            $('.postit', '#Append').each(function () {
                var thisPostit = $(this);
                var cardLine = [];

                thisPostit.find('p').each(function () {
                    cardLine.push({ 'Line': $(this).text() });
                });

                data.model.CardBDDs.push({
                    'Id': thisPostit.children('#Id').val(),
                    'IdHistoric': '@Model.Id',
                    'CardLines': cardLine
                });
            });

            $.ajax({
                contentType: 'application/json; charset=utf-8',
                type: 'POST',
                url: '@urlSave',
                data: JSON.stringify(data),
                success: function (data) {
                    changeContent(data);
                }
            });
        }
        else
            $('.board-message')
                .text(result)
                .fadeIn();
    }

    function validationsByJs() {
        if ($('.postit', '#Append').length == 0)
            return 'Escreva pelo menos um card';

        return true;
    }

    function count() {
        countLines = $('.postit:last p').length;
    }

    function finishCard() {
        var lastPostit = $('.postit:last');

        if (!lastPostit.hasClass('alert-dismissible')) {
            lastPostit.addClass('alert-dismissible').prepend(eRemovePostit);
            lastPostit.removeClass('postit-send');
        }

        $('#Append').append(ePlusPostit);
        $('.postit:last .input-group').remove();
        $('.remove-line').remove();
    }

    function appendPostit(element) {
        var result = validationsToAppendPostit();

        if (result == true) {
            element.parent().remove();
            $('#Append').append(ePostit);

            count();
            choices();

            $('#Text').focus();
        }
        else
            writeMessage(result);
    }

    function validationsToAppendPostit() {
        var countActive = $('.postit.active').length;

        if (countActive == 0)
            return 'Selecione um User Story para adicionar um cartão!';

        return true;
    }

    function removePostit(element) {
        element.closest('.to-remove').remove();
    }

    function removeLine(element) {
        var parent = element.parent();
        parent.nextAll().remove()
        parent.remove();

        changeFlag(idFlagged - 1);

        count();
        $('.postit:last p:last').append(eRemoveLinePostit);
        choices();
    }

    $('#UserStories').on('click', '.postit.select', function () {
        hideMessage();

        //actorSelected = {
        //    'Id': $(this).children('#Id').val(),
        //    'Text': $(this).children('p').text()
        //}

        $('#UserStories .postit.select').removeClass('active');
        $(this).addClass('active');
    });

    function hideWriter() {
        $('.postit .input-group').hide();
    }

    function showWriter() {
        $('.postit .input-group').show();
        $('#Text').focus();
    }

    $('#Append').on('click', '.finish-card', function () {
        cleanChoice();
        finishCard();
    });

    $('#Append').on('click', '.continue', function () {
        var value = $(this).parent().next('#IdChoice').val();
        cleanChoice();

        var element = sequence.find(i => i.Id == value);

        changeFlag(value);
        addTitle(element.Text);
        showWriter();
    });

    function cleanChoice() {
        $('.clickable').parent().remove();
        $('.choice').remove();
    }

    function changeFlag(value) {
        var convert = parseInt(value);

        if (Number.isInteger(convert)) {
            sequence.forEach(i => i.Flag = i.Id == value ? true : false );
        }
    }

    function choices() {
        var linesIgnore = [0, 1]
        var finalLines = [3, 4]

        if (linesIgnore.includes(countLines)) {
            idFlagged = sequence[countLines].Id;

            showWriter();
            changeFlag(countLines)
            addTitle(sequence[countLines].Text);
            return;
        }

        for (var i = 0; i < sequence.length; i++) {
            if (sequence[i].Flag == true) {
                var html = sequence[i + 1] != additionalE ? sequence[i + 1].Html : '';
                html += additionalE.Html;
                html += finalLines.includes(i) ? finalLine : '';

                idFlagged = sequence[i].Id;
                console.log(idFlagged);
                addChoice(html);

                hideWriter();
                break;
            }
        }
    }
</script>