@{
    var test = new List<List<string>>();
    var urlSave = "/UserStory/ThirdStep";
}

<div class="content-header">
    <h1>
        Criação do User Story
    </h1>
    <div class="breadcrumb">
        @Ajax.ActionLink("Voltar", "SecondStep", "UserStory", null, new AjaxOptions { InsertionMode = InsertionMode.Replace, UpdateTargetId = "Ajax_Update_Menu" }, new { @class = "btn btn-warning" })
        @Ajax.ActionLink("Continuar", "FinalStep", "UserStory", null, new AjaxOptions { InsertionMode = InsertionMode.Replace, UpdateTargetId = "Ajax_Update_Menu" }, new { @class = "btn btn-primary" })
    </div>
</div>
<div class="content">
    <div class="box">
        <div class="box-header with-border">
            <div class="col-lg-12">
                <div>
                    <h4>Após a seleção dos atores, é que se começa a contruir os cartões do User Story.</h4>
                    <p>Utilize a lousa para escrever os cartões.</p>
                </div>
            </div>
        </div>
        <div class="box-body">
            <div class="board">
                <div class="row">
                    <div class="col-sm-12 col-md-4 col-lg-2">
                        <h4>Segue o exemplo abaixo:</h4>
                        <div class="to-remove">
                            <div class="alert postit">
                                <p>Eu como << QUEM >></p>
                                <p>Quero << O QUÊ >></p>
                                <p>Para << POR QUÊ >></p>
                            </div>
                        </div>
                    </div>
                </div>
                <hr />
                <div class="row">
                    <div class="col-lg-2 col-centered board-message" style="display: none;"></div>
                </div>
                <div class="row" id="Append">
                    @Helpers.CreatePostit(test)
                </div>
                <div class="bottom-board">
                    <input id="BtnSave" type="submit" class="btn btn-flat btn-board btn-lg" value="Salvar">
                </div>
            </div>
        </div>
    </div>
</div>

@Helpers.PostitExampleHTML("eu como...")

@section scripts {
    <script type="text/javascript">
        var ePostit = $('#Postit').html();
        var eRemovePostit = $('#RemovePostit').html();
        var eRemoveLinePostit = $('#RemoveLinePostit').html();
        var ePlusPostit = $('#PlusPostit').html();
        var countP = 0;

        $(document).ready(function () {
            $('#Example').remove();
            $('#Append').append(ePlusPostit)
        });

        $('#Append').on('click', '#AddPostit', function () {
            $(this).parent().remove();
            $('#Append').append(ePostit);

            $('#Text').focus();
        });

        $('#Append').on('click', '#Send', function () {
            var input = $('#Text');
            var text = input.val();
            input.val('');

            if (text != '') {
                $('.remove-line').remove();
                $('.p:last').append($('<p></p>').text(text).append(eRemoveLinePostit));

                definePlaceholder();

                if (countP > 2) {
                    if (!$('.postit:last').hasClass('alert-dismissible')) {
                        $('.postit:last').addClass('alert-dismissible').prepend(eRemovePostit);
                    }

                    $('#Append').append(ePlusPostit);
                    $('.postit:last .input-group').remove();
                    $('.remove-line').remove();
                }
            }

            input.focus();
        });

        $('#Append').on('click', '.close', function () {
            $(this).closest('.to-remove').remove();
        });

        $('#Append').on('click', '.remove-line', function () {
            $(this).parent('p').remove();
            $('.postit:last p:last').append(eRemoveLinePostit);

            definePlaceholder();
        });

        $('#Append').on('keypress', '#Text', function (e) {
            if (e.keyCode == 13) {
                $('#Send').click();
            }
        });

        function definePlaceholder() {
            var input = $('#Text');

            countP = $('.postit:last p').length;

            switch (parseInt(countP)) {
                case 0:
                    input.attr("placeholder", "eu como...");
                    break;
                case 1:
                    input.attr("placeholder", "quero...");
                    break;
                case 2:
                    input.attr("placeholder", "para...");
                    break;
            }
        }

        $('#BtnSave').click(function () {
            var data = [];

            var json = validations();

            if (json.success != true) {
                $('.board-message')
                    .text(json.message)
                    .fadeIn();

                return null;
            }

            $('.postit.alert-dismissable', '#Append').each(function () {
                var lines = [];
                var length = $(this).find('p').length;

                $(this).find('p').each(function () {
                    lines.push($(this).text());
                });

                data.push(lines);            
            });

            $.ajax({
                type: 'POST',
                url: '@urlSave',
                data: {
                    'Postits': data
                },
                dataType: "json",
                success: function (data) {
                    $('.board-message').text(data.message);
                }
            });
        });

        function validations() {
            if ($('.postit', '#Append').length == 0)
                return { success: false, message: 'Escreva pelo menos um card' };

            var msg = 'Erro nos cards: '
            var length = msg.length;

            $('.postit', '#Append').each(function (index) {
                index++;
                var hasError;

                $(this).find('p').each(function (i) {
                    var error;
                    var line = $(this).text().toLowerCase();

                    switch (i) {
                        case 0:
                            error = line.startsWith('eu como') ? false : true;
                            break;
                        case 1:
                            error = line.startsWith('quero') ? false : true;
                            break;
                        case 2:
                            error = line.startsWith('para') ? false : true;
                            break;
                    }

                    if (error == true)
                        hasError = true;
                });

                if (hasError == true) 
                    msg += index + ', ';
            });

            if (msg.length != length)
                return { success: false, message: msg.substring(0, msg.length - 2) };

            return { success: true };
        }
    </script>
}