@model ETHistoric

@using TCC.Domain.Entities
@using TCC.BusinessLayer.BusinessLayers

@{
    var urlSave = "Learnboard/UserStory/SaveHistoric";
    var page = "Page_2";
}

@Scripts.Render("~/Scripts/Postit")

<script type="text/javascript">
    var actorSelected;

    function start() {
        resetActorSelected();

        $('#Example').remove();
        $('#Append').append(ePlusPostit);
    }

    function writeLine() {
        var input = $('#Text');
        var text = input.val();
        input.val('');

        if (text != '') {
            addLine(text)

            if (countLines > 2)
                finishCard();
        }

        input.focus();
    }

    function addLine(text) {
        $('.remove-line').remove();
        $('.p:last').append($('<p></p>').text(text).append(eRemoveLinePostit));

        count();
        definePlaceholder();
    }

    function sendToSave(event) {
        var result = validationsByJs();

        if (result == true) {
            hideMessage();

            var data = {
                'model': {
                    'Id': '@Model.Id',
                    'IdProject': '@Model.IdProject',
                    'CardUserStories': []
                },
                'page': '@page'
            };

            $('.postit', '#Append').each(function () {
                var cardLine = [];

                $(this).find('p').each(function () {
                    cardLine.push({ 'Line': $(this).text() });
                });

                data.model.CardUserStories.push({
                    'Id': $(this).children('#Id').val(),
                    'IdHistoric': '@Model.Id',
                    'CardLines': cardLine
                });
            });

            $.ajax({
                contentType: 'application/json; charset=utf-8',
                type: 'POST',
                url: '@urlSave',
                data: JSON.stringify(data),
                success: function (data) {
                    changeContent(data);
                }
            });
        }
        else
            writeMessage(result);
    }

    function validationsByJs() {
        if ($('.postit', '#Append').length == 0)
            return 'Escreva pelo menos um card';

        var msg = 'Erro nos cards: '
        var length = msg.length;

        $('.postit', '#Append').each(function (event, index) {
            index++;
            var hasError;

            $(this).find('p').each(function (e, i) {
                var error;
                var line = $(this).text().toLowerCase();

                switch (i) {
                    case 0:
                        error = line.startsWith('eu como') ? false : true;
                        break;
                    case 1:
                        error = line.startsWith('quero') ? false : true;
                        break;
                    case 2:
                        error = line.startsWith('para') ? false : true;
                        break;
                }

                if (error == true)
                    hasError = true;
            });

            if (hasError == true)
                msg += index + ', ';
        });

        if (msg.length != length)
            return msg.substring(0, msg.length - 2);

        return true;
    }

    function count() {
        countLines = $('.postit:last p').length;
    }

    function finishCard() {
        if (!$('.postit:last').hasClass('alert-dismissible'))
            $('.postit:last').addClass('alert-dismissible').prepend(eRemovePostit);

        $('#Append').append(ePlusPostit);
        $('.postit:last .input-group').remove();
        $('.remove-line').remove();
    }

    function appendPostit(element) {
        var result = validationsToAppend();

        if (result == true) {
            element.parent().remove();
            $('#Append').append(ePostit);
            addLine('Eu como ' + actorSelected.Text.toLowerCase());

            $('#Text').focus();
        }
        else
            writeMessage(result);
    }

    function validationsToAppend() {
        var countActive = $('.postit.active').length;

        if (countActive == 0)
            return 'Selecione um ator para adicionar um cartão!';

        return true;
    }

    function removePostit(element) {
        element.closest('.to-remove').remove();
    }

    function removeLine(element) {
        element.parent('p').remove();
        $('.postit:last p:last').append(eRemoveLinePostit);

        count();
        definePlaceholder();
    }

    function definePlaceholder() {
        var input = $('#Text');

        switch (parseInt(countLines)) {
            case 0:
                input.attr("placeholder", "eu como...");
                break;
            case 1:
                input.attr("placeholder", "quero...");
                break;
            case 2:
                input.attr("placeholder", "para...");
                break;
        }
    }

    $('#Actors').on('click', '.postit.select', function () {
        hideMessage();

        actorSelected = {
            'Id': $(this).children('#Id').val(),
            'Text': $(this).children('p').text()
        }

        $('#Actors .postit.select').removeClass('active');
        $(this).addClass('active');
    });

    function resetActorSelected() {
        actorSelected = null;
    }
</script>