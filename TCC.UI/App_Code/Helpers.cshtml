@using TCC.UI.Helpers.Toastrs

@helper ShowToastMessages(Toastr toastr)
{
    if (toastr != null)
    {
        <script type="text/javascript">
            $(() => {
            toastr.options.closeButton = '@toastr.ShowCloseButton';
            toastr.options.newestOnTop = '@toastr.ShowNewestOnTop';
            toastr.options.positionClass = '@toastr.PositionClass';

            @foreach (var message in toastr.ToastMessages)
            {
                var toastTypeValue = message.ToastType.ToString("F").ToLower();
                @: var optionsOverride = { /* Add message specific options here */ };
                if (message.IsSticky)
                {
                  @: optionsOverride.timeOut = 0;
                  @: optionsOverride.extendedTimeout = 0;
                }
                @: toastr['@toastTypeValue']('@message.Message', '@message.Title', optionsOverride);
            }
            });
        </script>
    }
}

@helper Column(string campo)
{
    @:  {
    @:      data: '@campo'
    @:  }
}

@helper ColumnEdit(string campo)
{
    @:  {
    @:      data: '@campo',
    @:      render: function(data, type, row) {
    @:          return '<a href="javascript:void(0);" onclick="edit(' + row.Id + ')">' + data + '</a>';
    @:      }
    @:  }
}

@helper ColumnToAction(string icon, string ajax, string texto = "")
{
    @:  {
    @:      render: function(data, type, row) {
    @:          return '<a href="javascript:void(0);" onclick="@ajax\(' + row.Id + '\)"><span class="@icon"></span>@texto</a>';
    @:      }
    @:  }
}

@helper LanguageTable()
{
    @:  language: {
    @:      decimal: "",
    @:      emptyTable: "Sem dados disponíveis na tabela",
    @:      info: "Página _PAGE_ de _PAGES_",
    @:      infoEmpty: "Sem registros disponíveis",
    @:      infoFiltered: "(filtrados do total de _MAX_ registros)",
    @:      infoPostFix: "",
    @:      thousands: ",",
    @:      lengthMenu: "_MENU_",
    @:      loadingRecords: "Carregando...",
    @:      processing: "Processando...",
    @:      search: "",
    @:      zeroRecords: "Não encontrado",
    @:      paginate: {
    @:          first: "Primeiro",
    @:          last: "Último",
    @:          next: "Avançar",
    @:          previous: "Voltar"
    @:      },
    @:      aria: {
    @:          sortAscending: ":ativado para ordenação ascendente",
    @:          sortDescending: ":ativado para ordenação descendente"
    @:      }
    @:  }
}

@helper  EditPageAjax(string url)
{
    @:  function edit(id, url) {
    @:      $.ajax({
    @:          type: 'GET',
    @:          url: '@url',
    @:          data: { 'id': id },
    @:          success: function(data) {
    @:              $('#Ajax_Update_Menu').empty().html(data);
    @:          }
    @:      });
    @:  }
}

@helper  AddPageAjax(string function)
{
    @:  function @function (id, url) {
    @:      $.ajax({
    @:          type: 'POST',
    @:          url: url,
    @:          data: { 'id': id },
    @:          success: function(data) {
    @:              $('#Ajax_Update_Menu').empty().html(data);
    @:          }
    @:      });
    @:  }
}

@helper  AddPageAjax(string function, string url)
{
    @:  function @function (id) {
    @:      $.ajax({
    @:          type: 'POST',
    @:          url: '@url',
    @:          data: { 'id': id },
    @:          success: function(data) {
    @:              $('#Ajax_Update_Menu').empty().html(data);
    @:          }
    @:      });
    @:  }
}

@helper LoadingPage()
{
    <div id="Loading" style="display: none;">
        <div class="overlay">
            <img class="loading" src="/Content/AdminLTE/img/loading.svg" alt="Loading Gif">
        </div>
        <div class="overlay background-loading opacity"></div>
    </div>
}

@helper LoadingInitial()
{
    <div id="LoadingInitial">
        <figure class="overlay">
            <img class="loading" src="/Content/AdminLTE/img/loading.svg" alt="Loading Gif">
            <figcaption>
                <h1>Easy Test</h1>
                <h3>Teste em primeiro lugar</h3>
            </figcaption>
        </figure>
        <div class="overlay background-loading-start"></div>
    </div>
}

@helper PostitExampleHTML(string placeholder = "digite aqui...")
{
    <div id="Example" style="display:none">
        <div id="Postit">
            <div class="col-sm-12 col-md-4 col-lg-2 to-remove postit-send">
                <div class="alert postit">
                    <div class="p"></div>
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="@placeholder" id="Text">
                        <span class="input-group-btn">
                            <button class="btn btn-flat" id="Send">
                                <i class="fa fa-pencil"></i>
                            </button>
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <div id="RemovePostit">
            <button type="button" class="close"><i class="fa fa-map-pin"></i></button>
        </div>
        <div id="RemoveLinePostit">
            <a class="remove-line"><i class="fa fa-remove"></i></a>
        </div>
        <div id="PlusPostit">
            <div class="col-lg-2">
                <button id="AddPostit" class="btn btn-flat btn-board">
                    <i class="fa fa-plus"></i>
                </button>
            </div>
        </div>
    </div>
}

@helper CreatePostit(List<string> lines)
{
    if (lines.Count > 0)
    {
        <div class="col-sm-12 col-md-4 col-lg-2 to-remove">
            <div class="alert postit alert-dismissable">
                <button type="button" class="close"><i class="fa fa-map-pin"></i></button>
                @foreach (var line in lines)
                {
                    <div class="p"><p>@line</p></div>
                }
            </div>
        </div>
    }
}

@helper CreatePostit(List<List<string>> postits)
{
    foreach (var lines in postits)
    {
        <div class="col-sm-12 col-md-4 col-lg-2 to-remove">
            <div class="alert postit alert-dismissable">
                <button type="button" class="close"><i class="fa fa-map-pin"></i></button>
                @foreach (var line in lines)
                {
                    <div class="p"><p>@line</p></div>
                }
            </div>
        </div>
    }
}

@helper SocialMedias(string name)
{
    <li><a href="javascript:void(0);" class="@name"><i class="fa fa-@name"></i></a></li>
}

@helper Footer()
{
    <div class="main-footer">
        <a href="javascript:void(0);" id="KnowMore">Saiba Mais<i class="fa fa-hand-o-down"></i></a>
    </div>
}

@helper ContentFixed()
{
    <div class="content-wrapper-fixed">
        <div class="col-lg-6 start-learnboard">
            <img class="wallpaper-programmer" src="/Content/AdminLTE/img/wallpaper-2.svg" alt="Loading Gif">
            <h3>Chega de desculpas !!</h3>
            <a href="/Learnboard" class="btn btn-outline btn-start-learnboard">TESTE JÁ</a>
        </div>
        <div class="col-lg-6 visible-lg-block">
            <img class="wallpaper-fixed" src="/Content/AdminLTE/img/wallpaper.svg" alt="Loading Gif">
        </div>
    </div>
}